#include <Keypad.h>

// Define as linhas e colunas do teclado 4x4
const byte ROWS = 4;
const byte COLS = 4;

// Define os pinos de entrada/saída usados para conectar o teclado
byte rowPins[ROWS] = {9, 8, 7, 6};
byte colPins[COLS] = {5, 4, 3, 2};

// Define a matriz de caracteres do teclado
char teclas[ROWS][COLS] = {
  {'1', '2', '3', 'A'},
  {'4', '5', '6', 'B'},
  {'7', '8', '9', 'C'},
  {'*', '0', '#', 'D'}
};

// Cria um objeto Keypad com as configurações definidas acima
Keypad teclado = Keypad(makeKeymap(teclas), rowPins, colPins, ROWS, COLS);

// Define a senha como um vetor de caracteres
char senha[] = {'1', '2', '3', '4'};

// Define uma variável para acompanhar quantos dígitos foram lidos
int digitosLidos = 0;

// Função que lê a entrada do teclado e retorna o caractere da tecla pressionada
char lerTeclado() {
  char tecla = teclado.getKey();
  if (tecla != NO_KEY) {
    return tecla;
  }
  return '\0';
}

// Função que verifica se a senha digitada é válida
bool checkPassword(char* senhaDigitada) {
  for (int i = 0; i < 4; i++) {
    if (senhaDigitada[i] != senha[i]) {
      return false;
    }
  }
  return true;
}

void setup() {
  Serial.begin(9600);
}

void loop() {
  char tecla = lerTeclado();
  if (tecla != '\0') {
    Serial.print("Tecla pressionada: ");
    Serial.println(tecla);
    digitosLidos++;
  }
  if (digitosLidos == 4) {
    // Se quatro dígitos foram lidos, verifica a senha
    if (checkPassword(teclado.keypadState().raw)) {
      Serial.println("Senha correta!");
      // Ligue o sistema aqui
    } else {
      Serial.println("Senha incorreta!");
      // Faça alguma coisa quando a senha estiver incorreta
    }
    digitosLidos = 0;
  }
}
